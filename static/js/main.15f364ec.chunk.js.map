{"version":3,"sources":["firebase.js","components/Welcome.js","components/PrincipleOne.js","components/PrincipleTwo.js","components/PrincipleThree.js","components/PrincipleFour.js","components/PrincipleFive.js","components/PrincipleSix.js","components/RecordedLogs.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Welcome","sendDataToParent","props","goToPrincipleOneProp","className","onClick","this","tabIndex","Component","PrincipleOne","goToPrincipleTwoProp","action","htmlFor","type","PrincipleTwo","goToPrincipleThreeProp","PrincipleThree","goToPrincipleFourProp","PrincipleFour","goToPrincipleFiveProp","PrincipleFive","goToPrincipleSixProp","PrincipleSix","goToRecordedLogsProp","RecordedLogs","startRecordingLogsProp","today","Date","dateDisplay","getFullYear","getMonth","getDate","state","date","App","recordingLogs","logs","map","log","showPrincipleOne","setState","showingWelcome","showingPrincipleOne","showingPrincipleTwo","showingPrincipleThree","showingPrincipleFour","showingPrincipleFive","showingPrincipleSix","showingRecordedLogs","showPrincipleTwo","showPrincipleThree","showPrincipleFour","showPrincipleFive","showPrincipleSix","showRecordedLogs","database","ref","on","response","console","val","newState","data","key","push","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.15f364ec.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA7FkUVDv3lG3uEOc-J7jCCNsBIuhbGkJU\",\n    authDomain: \"jacqueline-nosal-project-five.firebaseapp.com\",\n    databaseURL: \"https://jacqueline-nosal-project-five.firebaseio.com\",\n    projectId: \"jacqueline-nosal-project-five\",\n    storageBucket: \"jacqueline-nosal-project-five.appspot.com\",\n    messagingSenderId: \"1029935966372\",\n    appId: \"1:1029935966372:web:ec16c559eacacb43351e31\",\n    measurementId: \"G-WHM0G69WJR\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport '../index.css';\n\nclass Welcome extends Component {\n    sendDataToParent = () => {\n        this.props.goToPrincipleOneProp();\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Welcome</h1>\n                <p className=\"welcome-text\">The Agile Helper provides the opportunity to check-in with yourself on a regular basis, reflecting on the core principles behind your Agile practices</p>\n                <button onClick={this.sendDataToParent} tabIndex=\"1\">\n                    <p>Continue</p>\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\nimport '../index.css';\n\nclass PrincipleOne extends Component {\n    sendDataToParent = () => {\n        this.props.goToPrincipleTwoProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In:</h2>\n                        <div className=\"principles-top-text\">\n                            <p><span className=\"principle-number\">Principle #1:</span> Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.</p>\n                            <p className=\"question\">How is your team doing with regards to continuously delivering software to get feedback early in the project, and keeping that feedback up to date?</p>\n                        </div>\n                        <form action=\"submit\">\n                            <label htmlFor=\"reflection\">Log your answer here:</label>\n                            <input type=\"text\"/>\n                            <button onClick={this.sendDataToParent} type=\"submit\">\n                                <p>Submit and Continue</p>\n                            </button>\n                        </form>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default PrincipleOne;\n\n","import React, { Component } from 'react';\nimport '../index.css';\n\nclass PrincipleTwo extends Component {\n    sendDataToParent = () => {\n        this.props.goToPrincipleThreeProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In:</h2>\n                        <div className=\"principles-top-text\">\n                            <p><span className=\"principle-number\">Principle #2:</span> Welcome changing requirements, even late in development. Agile processes harness change for the customer’s competitive advantage.</p>\n                            <p className=\"question\">Did your team embrace change today by treating project changes as positive and healthy developments?</p>\n                        </div>\n                        <form action=\"submit\">\n                            <label htmlFor=\"reflection\">Log your answer here:</label>\n                            <input type=\"text\"/>\n                            <button onClick={this.sendDataToParent} type=\"submit\">\n                                <p>Submit and Continue</p>\n                            </button>\n                        </form>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default PrincipleTwo;","import React, { Component } from 'react';\nimport '../index.css';\n\nclass PrincipleThree extends Component {\n    sendDataToParent = () => {\n        this.props.goToPrincipleFourProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In:</h2>\n                        <div className=\"principles-top-text\">\n                            <p><span className=\"principle-number\">Principle #3:</span> Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.</p>\n                            <p className=\"question\">Did your team leverage timeboxed iterations to deliver working software frequently, and constantly adjust so that the project delivers the most value to the customer?</p>\n                        </div>\n                        <form action=\"submit\">\n                            <label htmlFor=\"reflection\">Log your answer here:</label>\n                            <input type=\"text\"/>\n                            <button onClick={this.sendDataToParent} type=\"submit\">\n                                <p>Submit and Continue</p>\n                            </button>\n                        </form>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default PrincipleThree;","import React, { Component } from 'react';\nimport '../index.css';\n\nclass PrincipleFour extends Component {\n    sendDataToParent = () => {\n        this.props.goToPrincipleFiveProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In:</h2>\n                        <div className=\"principles-top-text\">\n                            <p><span className=\"principle-number\">Principle #4:</span> The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.</p>\n                            <p className=\"question\">Did your team focus on face-to-face conversation and rely on the minimum amount of documentation necessary for the project?</p>\n                        </div>\n                        <form action=\"submit\">\n                            <label htmlFor=\"reflection\">Log your answer here:</label>\n                            <input type=\"text\"/>\n                            <button onClick={this.sendDataToParent} type=\"submit\">\n                                <p>Submit and Continue</p>\n                            </button>\n                        </form>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default PrincipleFour;","import React, { Component } from 'react';\nimport '../index.css';\n\nclass PrincipleFive extends Component {\n    sendDataToParent = () => {\n        this.props.goToPrincipleSixProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In:</h2>\n                        <div className=\"principles-top-text\">\n                            <p><span className=\"principle-number\">Principle #5:</span> Businesspeople and developers must work together daily throughout the project.</p>\n                            <p className=\"question\">Are the Developers on your team working with business users every day so that they can deliver the most value?</p>\n                        </div>\n                        <form action=\"submit\">\n                            <label htmlFor=\"reflection\">Log your answer here:</label>\n                            <input type=\"text\"/>\n                            <button onClick={this.sendDataToParent} type=\"submit\">\n                                <p>Submit and Continue</p>\n                            </button>\n                        </form>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default PrincipleFive;","import React, { Component } from 'react';\nimport '../index.css';\n\nclass PrincipleSix extends Component {\n    sendDataToParent = () => {\n        this.props.goToRecordedLogsProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In:</h2>\n                        <div className=\"principles-top-text\">\n                            <p><span className=\"principle-number\">Principle #6:</span> Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.</p>\n                            <p className=\"question\">Does everyone on your team feel responsible for the project, and feel accountable for its success?</p>\n                        </div>\n                        <form action=\"submit\">\n                            <label htmlFor=\"reflection\">Log your answer here:</label>\n                            <input type=\"text\"/>\n                            <button onClick={this.sendDataToParent} type=\"submit\">\n                                <p>Submit and Continue</p>\n                            </button>\n                        </form>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default PrincipleSix;","import React, { Component } from 'react';\nimport '../index.css';\n\nclass RecordedLogs extends Component {\n    constructor() {\n        super();\n\n        const today = new Date();\n        const dateDisplay = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();\n\n        this.state = {\n            date: dateDisplay\n        };\n    }\n\n    sendDataToParent = () => {\n        this.props.startRecordingLogsProp();\n    }\n\n    render() {\n        return (\n            <main>\n                <section className=\"principles-contents\">\n                    <div className=\"wrapper\">\n                        <h2>Principles Check-In: <br />Recorded Logs</h2>\n                        <div className=\"recorded-entry\">\n                            <p className=\"recorded-date\">{this.state.date}</p>\n                            <div className=\"recorded-logs-container\">\n                                <ul>\n                                    {this.sendDataToParent()}\n                                </ul>\n                            </div>\n                            <p className=\"citation\">2020 Jacqui Nosal. All credit and reference to the <cite>Agile Manifesto, values, and principles goes to “Learning Agile: Understanding Scrum, XP, Lean, and Kanban” by Andrew Stellman & Jennifer Greene</cite></p>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        );\n    }\n}\n\nexport default RecordedLogs;","import React, { Component } from 'react';\nimport './index.css';\n\n// Custom Imports\nimport firebase from './firebase';\nimport Welcome from './components/Welcome';\nimport PrincipleOne from './components/PrincipleOne';\nimport PrincipleTwo from './components/PrincipleTwo';\nimport PrincipleThree from './components/PrincipleThree';\nimport PrincipleFour from './components/PrincipleFour';\nimport PrincipleFive from './components/PrincipleFive';\nimport PrincipleSix from './components/PrincipleSix';\nimport RecordedLogs from './components/RecordedLogs';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logs: [],\n      showingWelcome: true,\n      showingPrincipleOne: false,\n      showingPrincipleTwo: false,\n      showingPrincipleThree: false,\n      showingPrincipleFour: false,\n      showingPrincipleFive: false,\n      showingPrincipleSix: false, \n      showingRecordedLogs: false\n    }\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (response) => {\n      console.log(response.val());\n\n      const newState = [];\n      const data = response.val();\n\n      for (let key in data) {\n        newState.push(data[key]);\n      }\n\n      this.setState({\n        logs: newState\n      });\n    });\n  }\n\n  recordingLogs = () => {\n    this.state.logs.map((log) => {\n      return (\n        <li>\n          <p>{log}</p>\n        </li>\n      );\n    });\n  }\n\n  showPrincipleOne = () => {\n      this.setState({\n          showingWelcome: false, \n          showingPrincipleOne: true,\n          showingPrincipleTwo: false,\n          showingPrincipleThree: false,\n          showingPrincipleFour: false,\n          showingPrincipleFive: false,\n          showingPrincipleSix: false, \n          showingRecordedLogs: false\n      });\n  }\n\n  showPrincipleTwo = () => {\n      this.setState({\n          showingWelcome: false, \n          showingPrincipleOne: false,\n          showingPrincipleTwo: true,\n          showingPrincipleThree: false,\n          showingPrincipleFour: false,\n          showingPrincipleFive: false,\n          showingPrincipleSix: false, \n          showingRecordedLogs: false\n      });\n  }\n\n  showPrincipleThree = () => {\n    this.setState({\n        showingWelcome: false, \n        showingPrincipleOne: false,\n        showingPrincipleTwo: false,\n        showingPrincipleThree: true,\n        showingPrincipleFour: false,\n        showingPrincipleFive: false,\n        showingPrincipleSix: false, \n        showingRecordedLogs: false\n    });\n  }\n\n  showPrincipleFour = () => {\n    this.setState({\n        showingWelcome: false, \n        showingPrincipleOne: false,\n        showingPrincipleTwo: false,\n        showingPrincipleThree: false,\n        showingPrincipleFour: true,\n        showingPrincipleFive: false,\n        showingPrincipleSix: false, \n        showingRecordedLogs: false\n    });\n  }\n\n  showPrincipleFive = () => {\n    this.setState({\n        showingWelcome: false, \n        showingPrincipleOne: false,\n        showingPrincipleTwo: false,\n        showingPrincipleThree: false,\n        showingPrincipleFour: false,\n        showingPrincipleFive: true,\n        showingPrincipleSix: false, \n        showingRecordedLogs: false\n    });\n  }\n\n  showPrincipleSix = () => {\n    this.setState({\n        showingWelcome: false, \n        showingPrincipleOne: false,\n        showingPrincipleTwo: false,\n        showingPrincipleThree: false,\n        showingPrincipleFour: false,\n        showingPrincipleFive: false,\n        showingPrincipleSix: true, \n        showingRecordedLogs: false\n    });\n  }\n\n  showRecordedLogs = () => {\n    this.setState({\n        showingWelcome: false, \n        showingPrincipleOne: false,\n        showingPrincipleTwo: false,\n        showingPrincipleThree: false,\n        showingPrincipleFour: false,\n        showingPrincipleFive: false,\n        showingPrincipleSix: false, \n        showingRecordedLogs: true\n    });\n  }\n\n  render() {\n    return (\n      <main>\n        <section className=\"contents\">\n          <div className=\"wrapper\">\n            {this.state.showingWelcome ? <Welcome goToPrincipleOneProp={this.showPrincipleOne} /> : null}\n            {this.state.showingPrincipleOne ? <PrincipleOne goToPrincipleTwoProp={this.showPrincipleTwo} /> : null}\n            {this.state.showingPrincipleTwo ? <PrincipleTwo goToPrincipleThreeProp={this.showPrincipleThree} /> : null}\n            {this.state.showingPrincipleThree ? <PrincipleThree goToPrincipleFourProp={this.showPrincipleFour} /> : null}\n            {this.state.showingPrincipleFour ? <PrincipleFour goToPrincipleFiveProp={this.showPrincipleFive} /> : null}\n            {this.state.showingPrincipleFive ? <PrincipleFive goToPrincipleSixProp={this.showPrincipleSix} /> : null}\n            {this.state.showingPrincipleSix ? <PrincipleSix goToRecordedLogsProp={this.showRecordedLogs} /> : null}\n            {this.state.showingRecordedLogs ? <RecordedLogs startRecordingLogsProp={this.recordingLogs} /> : null}\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}